kubectl create ns webhook-demo
kubectl -n webhook-demo create secret tls webhook-server-tls \
    --cert "/root/keys/webhook-server-tls.crt" \
    --key "/root/keys/webhook-server-tls.key"

controlplane ~ ➜  kubectl create -f /root/webhook-deployment.yaml
deployment.apps/webhook-server created

controlplane ~ ➜  cat /root/webhook-deployment.yaml 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhook-server
  namespace: webhook-demo
  labels:
    app: webhook-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webhook-server
  template:
    metadata:
      labels:
        app: webhook-server
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1234
      containers:
      - name: server
        image: stackrox/admission-controller-webhook-demo:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8443
          name: webhook-api
        volumeMounts:
        - name: webhook-tls-certs
          mountPath: /run/secrets/tls
          readOnly: true
      volumes:
      - name: webhook-tls-certs
        secret:
          secretName: webhook-server-tls


controlplane ~ ➜  kubectl apply -f /root/webhook-service.yaml
service/webhook-server created

controlplane ~ ➜  cat /root/webhook-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: webhook-server
  namespace: webhook-demo
spec:
  selector:
    app: webhook-server
  ports:
    - port: 443
      targetPort: webhook-api

controlplane ~ ➜  

controlplane ~ ➜  cat /root/webhook-configuration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: demo-webhook
webhooks:
  - name: webhook-server.webhook-demo.svc
    clientConfig:
      service:
        name: webhook-server
        namespace: webhook-demo
        path: "/mutate"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURQekNDQWllZ0F3SUJBZ0lVQ3hxaUdrcnlGakc5VU5DL3ZqSU5Odnora2Z3d0RRWUpLb1pJaHZjTkFRRUwKQlFBd0x6RXRNQ3NHQTFVRUF3d2tRV1J0YVhOemFXOXVJRU52Ym5SeWIyeHNaWElnVjJWaWFHOXZheUJFWlcxdgpJRU5CTUI0WERUSTBNREV4TnpJd05EZ3hORm9YRFRJME1ESXhOakl3TkRneE5Gb3dMekV0TUNzR0ExVUVBd3drClFXUnRhWE56YVc5dUlFTnZiblJ5YjJ4c1pYSWdWMlZpYUc5dmF5QkVaVzF2SUVOQk1JSUJJakFOQmdrcWhraUcKOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTRybWZGRlhBSEY1cGRqcjBTNzR4UFBCY0t1SmN5ZXN2L1ZpTQpMaS9LQitheFo2QzJtdU16S2h6SmpuNzZUbW9icVA1Z29xWUtsTW8wSzBBS0EzUUdqZml3bUs3ejErZkVXdnBvCkpjL0xLemtJTUJqdWRtckNhSG02Q0N2dzl2dGExWXRGQUN5RXdQcmc3MUxjWlJHTXNFRC94WHlSVXdrYmFvU3YKOHJjV0pNUEFjRCt5SUdVc3BnbEhBeFhhOHA3bWM1NDVMR0FpeVB4bW9VbWhuS2Y0bUFlNFhZMjZvMk5lVlhXQgpMR25NVFJVMk9saVRPd1RoNERsRmozbkNMVHY5ZWxNVE05RGNLMldVYUtORlRJb0NMSXNmMUFZK0tYK2dVNCsrCnIzRmN5VWN2Q2JoaUl4ejU4bEljeTN0aHRpcWZTOHEvdStqUHJMNG5MNkt3dVNaQjZ3SURBUUFCbzFNd1VUQWQKQmdOVkhRNEVGZ1FVTlR3a0d1ZDJGR1ViUHNUeWVoSTNnbG1QWTFnd0h3WURWUjBqQkJnd0ZvQVVOVHdrR3VkMgpGR1ViUHNUeWVoSTNnbG1QWTFnd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DCkFRRUFzSWZnaFIwd2I3Qk5DRGxrZ2hERSsxbjhQNld2QURLL0cyMmxqOENYcVJWelBXeVh0cnJzRm9vbGZvMlAKbFBkSDRkZXlGSnlaM285M3RNc01sZ1FXdVR6UWY2UHVyS3JoVEFtUk9RWjlXSTh5SnFrd0h5cWZ5Z09veFgxcwo3cFQwQms0OUlBMElENHBQamRpcU51ck9ITDkxSDR5TDZtTllNSjNBRGtKOUhURlFYanUrOFR3bmcvczc1eC85CmZtUjRZTU5qb3RIY0IyOFlNVE84cWhvc0lydVA3WGo2OHF5bU80aDZwR1pIT3BYZ1JVcXlNK2hBekdPSDRibWkKdnNudng1ZGJjUTZBdkQxeWtpQXM0L0Zjb3Q1Q3A5UHpVa1d4RlVBK2JnRUR2dHFUZGx3TkRXTFY1Q2hSNENISgplWjRwZnNXeWExOU8xcHl4MVh6UmFSY25tQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    rules:
      - operations: [ "CREATE" ]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
    admissionReviewVersions: ["v1beta1"]
    sideEffects: None

controlplane ~ ➜  kubectl create -f /root/webhook-configuration.yaml
mutatingwebhookconfiguration.admissionregistration.k8s.io/demo-webhook created

controlplane ~ ➜  


controlplane ~ ➜  cat /root/pod-with-defaults.yaml
# A pod with no securityContext specified.
# Without the webhook, it would run as user root (0). The webhook mutates it
# to run as the non-root user with uid 1234.
apiVersion: v1
kind: Pod
metadata:
  name: pod-with-defaults
  labels:
    app: pod-with-defaults
spec:
  restartPolicy: OnFailure
  containers:
    - name: busybox
      image: busybox
      command: ["sh", "-c", "echo I am running as user $(id -u)"]

controlplane ~ ➜  kubectl apply -f /root/pod-with-defaults.yaml
pod/pod-with-defaults created

controlplane ~ ➜  

controlplane ~ ➜  cat /root/pod-with-override.yaml
# A pod with a securityContext explicitly allowing it to run as root.
# The effect of deploying this with and without the webhook is the same. The
# explicit setting however prevents the webhook from applying more secure
# defaults.
apiVersion: v1
kind: Pod
metadata:
  name: pod-with-override
  labels:
    app: pod-with-override
spec:
  restartPolicy: OnFailure
  securityContext:
    runAsNonRoot: false
  containers:
    - name: busybox
      image: busybox
      command: ["sh", "-c", "echo I am running as user $(id -u)"]

controlplane ~ ➜  kubectl apply -f /root/pod-with-override.yaml
pod/pod-with-override created

controlplane ~ ➜  

controlplane ~ ➜  cat /root/pod-with-conflict.yaml
# A pod with a conflicting securityContext setting: it has to run as a non-root
# user, but we explicitly request a user id of 0 (root).
# Without the webhook, the pod could be created, but would be unable to launch
# due to an unenforceable security context leading to it being stuck in a
# 'CreateContainerConfigError' status. With the webhook, the creation of
# the pod is outright rejected.
apiVersion: v1
kind: Pod
metadata:
  name: pod-with-conflict
  labels:
    app: pod-with-conflict
spec:
  restartPolicy: OnFailure
  securityContext:
    runAsNonRoot: true
    runAsUser: 0
  containers:
    - name: busybox
      image: busybox
      command: ["sh", "-c", "echo I am running as user $(id -u)"]

controlplane ~ ➜  kubectl apply -f /root/pod-with-conflict.yaml
Error from server: error when creating "/root/pod-with-conflict.yaml": admission webhook "webhook-server.webhook-demo.svc" denied the request: runAsNonRoot specified, but runAsUser set to 0 (the root user)

controlplane ~ ✖ 

Mutating webhook should reject the request as its asking to run as root user without setting runAsNonRoot: false